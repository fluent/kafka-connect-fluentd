plugins {
    id "java"
    id "maven"
    id "signing"
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

group = "org.fluentd.kafka"
version = "0.0.2"

description = """kafka-connect-fluentd"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

def isDevBuild
def isCiBuild
def isReleaseBuild
def sonatypeRepositoryUrl

if (hasProperty("release")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
    isCiBuild = true
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
    version += "-SNAPSHOT"
}

repositories {
    maven { url "http://packages.confluent.io/maven/" }
    maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {
    testCompile group: "junit", name: "junit", version:"[4.0, 5.0)"
    testCompile group: "org.hamcrest", name: "hamcrest-all", version:"1.3"
    testCompile group: "org.powermock", name: "powermock-module-junit4", version: "1.7.1"
    testCompile group: "org.powermock", name: "powermock-api-easymock", version: "1.7.1"
    testCompile group: "org.easymock", name: "easymock", version: "3.4"
    compile(group: "org.apache.kafka", name: "connect-api", version:"1.0.0") {
       /* This dependency was originally in the Maven provided scope, but the project was not of type war.
       This behavior is not yet supported by Gradle, so this dependency has been converted to a compile dependency.
       Please review and delete this closure when resolved. */
    }
    compile group: "org.komamitsu", name: "fluency", version: "1.4.0"
    compile group: "com.okumin", name: "influent-java", version: "0.4.0-M1"
}

task generateJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.runtimeClasspath
    options.locale = "en_US"
    options.encoding = "UTF-8"
}

shadowJar {
    exclude "org/apache/kafka/**/*.class"
}

task zip(type: Zip, dependsOn: jar) {
    description "Create ${archiveFileName}"
    into("kafka-connect-fluentd") {
        from jar.archiveFile
        from configurations.compile.findAll { !(it =~ /org\.apache\.kafka/) }
    }
}

task targz(type: Tar, dependsOn: jar) {
    archiveExtension = "tgz"
    description "Create ${archiveFileName}"
    compression = Compression.GZIP
    into("kafka-connect-fluentd") {
        from jar.archiveFile
        from configurations.compile.findAll { !(it =~ /org\.apache\.kafka/) }
    }
}

task javadocJar(type: Jar, dependsOn: generateJavadoc) {
    archiveClassifier = "javadoc"
    from "${buildDir}/docs/javadoc"
}

task sourcesJar(type: Jar) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives jar, shadowJar, targz, zip, javadocJar, sourcesJar
}

signing {
    required { isReleaseBuild }
    sign configurations.archives
}

uploadArchives {
    repositories {
        if (isDevBuild) {
            mavenLocal()
        } else {
            mavenDeployer {
                if (isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'kafka-connect-fluentd'
                    packaging 'jar'
                    description 'Kafka Connector for Fluentd'
                    url 'https://github.com/fluent/kafka-connect-fluentd'

                    scm {
                        url "scm:git@github.com:fluent/kafka-connect-fluentd.git"
                        connection "scm:git@github.com:fluent/kafka-connect-fluentd.git"
                        developerConnection "scm:git@github.com:fluent/kafka-connect-fluentd.git"
                    }
                    licenses {
                        license {
                            name 'Apache-2.0'
                            url 'https://www.apache.org/licenses/LICENSE-2.0'
                        }
                    }
                    developers {
                        developer {
                            id 'okkez'
                            name 'Kenji Okimoto'
                            email 'okimoto@clear-code.com'
                        }
                    }
                }
            }
        }
    }
}
